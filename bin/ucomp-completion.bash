# AUTOMATCALLY GENERATED by `shtab`

_shtab_ucomp_subparsers=('list' 'ls' 'cat' 'validate' 'log' 'missing' 'versions' 'database' 'db' 'end-of-day' 'eod' 'realtime' 'rt' 'calibration' 'cal' 'reprocess' 'clearday' 'archive' 'regress' 'verify' 'simulate' 'script')

_shtab_ucomp_option_strings=('-h' '--help' '-v' '--version')
_shtab_ucomp_list_option_strings=('-h' '--help')
_shtab_ucomp_ls_option_strings=('-h' '--help' '-k' '--keywords')
_shtab_ucomp_cat_option_strings=('-h' '--help' '-k' '--keywords' '--validate' '-r' '--header' '-e' '--extension')
_shtab_ucomp_validate_option_strings=('-h' '--help' '--level' '-f' '--flags')
_shtab_ucomp_log_option_strings=('-h' '--help' '-l' '--level' '-p' '--prune' '-f' '--follow' '-d' '--debug' '-i' '--info' '-w' '--warn' '-e' '--error' '-c' '--critical')
_shtab_ucomp_missing_option_strings=('-h' '--help' '-f' '--flags' '-s' '--script')
_shtab_ucomp_versions_option_strings=('-h' '--help' '-f' '--flags' '--filter' '-o' '--oldest' '-s' '--summary')
_shtab_ucomp_database_option_strings=('-h' '--help' '-f' '--flags' '-c' '--columns')
_shtab_ucomp_db_option_strings=('-h' '--help' '-f' '--flags' '-c' '--columns')
_shtab_ucomp_end_of_day_option_strings=('-h' '--help' '-f' '--flags' '--no-wait' '--verbose')
_shtab_ucomp_eod_option_strings=('-h' '--help' '-f' '--flags' '--no-wait' '--verbose')
_shtab_ucomp_realtime_option_strings=('-h' '--help' '-f' '--flags' '--no-wait' '--verbose')
_shtab_ucomp_rt_option_strings=('-h' '--help' '-f' '--flags' '--no-wait' '--verbose')
_shtab_ucomp_calibration_option_strings=('-h' '--help' '-f' '--flags' '--no-wait' '--verbose')
_shtab_ucomp_cal_option_strings=('-h' '--help' '-f' '--flags' '--no-wait' '--verbose')
_shtab_ucomp_reprocess_option_strings=('-h' '--help' '-f' '--flags' '--no-wait' '--verbose')
_shtab_ucomp_clearday_option_strings=('-h' '--help' '-f' '--flags' '--no-wait' '--verbose')
_shtab_ucomp_archive_option_strings=('-h' '--help' '-f' '--flags' '-l' '--level' '--no-wait' '--verbose')
_shtab_ucomp_regress_option_strings=('-h' '--help' '-f' '--flags' '--no-wait' '--verbose')
_shtab_ucomp_verify_option_strings=('-h' '--help' '-f' '--flags' '--verbose')
_shtab_ucomp_simulate_option_strings=('-h' '--help' '-f' '--flags' '--no-eod')
_shtab_ucomp_script_option_strings=('-h' '--help' '-f' '--flags' '-n' '--name' '--no-wait' '--verbose')



_shtab_ucomp_pos_0_choices='list ls cat validate log missing versions database db end-of-day eod realtime rt calibration cal reprocess clearday archive regress verify simulate script'

_shtab_ucomp_pos_0_nargs=A...
_shtab_ucomp__h_nargs=0
_shtab_ucomp___help_nargs=0
_shtab_ucomp__v_nargs=0
_shtab_ucomp___version_nargs=0
_shtab_ucomp_list__h_nargs=0
_shtab_ucomp_list___help_nargs=0
_shtab_ucomp_ls_pos_0_nargs=*
_shtab_ucomp_ls__h_nargs=0
_shtab_ucomp_ls___help_nargs=0
_shtab_ucomp_cat_pos_0_nargs=+
_shtab_ucomp_cat__h_nargs=0
_shtab_ucomp_cat___help_nargs=0
_shtab_ucomp_cat___validate_nargs=0
_shtab_ucomp_cat__r_nargs=0
_shtab_ucomp_cat___header_nargs=0
_shtab_ucomp_validate_pos_0_nargs=+
_shtab_ucomp_validate__h_nargs=0
_shtab_ucomp_validate___help_nargs=0
_shtab_ucomp_log_pos_0_nargs=+
_shtab_ucomp_log__h_nargs=0
_shtab_ucomp_log___help_nargs=0
_shtab_ucomp_log__f_nargs=0
_shtab_ucomp_log___follow_nargs=0
_shtab_ucomp_log__d_nargs=0
_shtab_ucomp_log___debug_nargs=0
_shtab_ucomp_log__i_nargs=0
_shtab_ucomp_log___info_nargs=0
_shtab_ucomp_log__w_nargs=0
_shtab_ucomp_log___warn_nargs=0
_shtab_ucomp_log__e_nargs=0
_shtab_ucomp_log___error_nargs=0
_shtab_ucomp_log__c_nargs=0
_shtab_ucomp_log___critical_nargs=0
_shtab_ucomp_missing_pos_0_nargs=*
_shtab_ucomp_missing__h_nargs=0
_shtab_ucomp_missing___help_nargs=0
_shtab_ucomp_missing__s_nargs=0
_shtab_ucomp_missing___script_nargs=0
_shtab_ucomp_versions_pos_0_nargs=*
_shtab_ucomp_versions__h_nargs=0
_shtab_ucomp_versions___help_nargs=0
_shtab_ucomp_versions__o_nargs=0
_shtab_ucomp_versions___oldest_nargs=0
_shtab_ucomp_versions__s_nargs=0
_shtab_ucomp_versions___summary_nargs=0
_shtab_ucomp_database__h_nargs=0
_shtab_ucomp_database___help_nargs=0
_shtab_ucomp_db__h_nargs=0
_shtab_ucomp_db___help_nargs=0
_shtab_ucomp_end_of_day_pos_0_nargs=*
_shtab_ucomp_end_of_day__h_nargs=0
_shtab_ucomp_end_of_day___help_nargs=0
_shtab_ucomp_end_of_day___no_wait_nargs=0
_shtab_ucomp_end_of_day___verbose_nargs=0
_shtab_ucomp_eod_pos_0_nargs=*
_shtab_ucomp_eod__h_nargs=0
_shtab_ucomp_eod___help_nargs=0
_shtab_ucomp_eod___no_wait_nargs=0
_shtab_ucomp_eod___verbose_nargs=0
_shtab_ucomp_realtime_pos_0_nargs=*
_shtab_ucomp_realtime__h_nargs=0
_shtab_ucomp_realtime___help_nargs=0
_shtab_ucomp_realtime___no_wait_nargs=0
_shtab_ucomp_realtime___verbose_nargs=0
_shtab_ucomp_rt_pos_0_nargs=*
_shtab_ucomp_rt__h_nargs=0
_shtab_ucomp_rt___help_nargs=0
_shtab_ucomp_rt___no_wait_nargs=0
_shtab_ucomp_rt___verbose_nargs=0
_shtab_ucomp_calibration_pos_0_nargs=*
_shtab_ucomp_calibration__h_nargs=0
_shtab_ucomp_calibration___help_nargs=0
_shtab_ucomp_calibration___no_wait_nargs=0
_shtab_ucomp_calibration___verbose_nargs=0
_shtab_ucomp_cal_pos_0_nargs=*
_shtab_ucomp_cal__h_nargs=0
_shtab_ucomp_cal___help_nargs=0
_shtab_ucomp_cal___no_wait_nargs=0
_shtab_ucomp_cal___verbose_nargs=0
_shtab_ucomp_reprocess_pos_0_nargs=*
_shtab_ucomp_reprocess__h_nargs=0
_shtab_ucomp_reprocess___help_nargs=0
_shtab_ucomp_reprocess___no_wait_nargs=0
_shtab_ucomp_reprocess___verbose_nargs=0
_shtab_ucomp_clearday_pos_0_nargs=*
_shtab_ucomp_clearday__h_nargs=0
_shtab_ucomp_clearday___help_nargs=0
_shtab_ucomp_clearday___no_wait_nargs=0
_shtab_ucomp_clearday___verbose_nargs=0
_shtab_ucomp_archive_pos_0_nargs=*
_shtab_ucomp_archive__h_nargs=0
_shtab_ucomp_archive___help_nargs=0
_shtab_ucomp_archive___no_wait_nargs=0
_shtab_ucomp_archive___verbose_nargs=0
_shtab_ucomp_regress_pos_0_nargs=*
_shtab_ucomp_regress__h_nargs=0
_shtab_ucomp_regress___help_nargs=0
_shtab_ucomp_regress___no_wait_nargs=0
_shtab_ucomp_regress___verbose_nargs=0
_shtab_ucomp_verify_pos_0_nargs=*
_shtab_ucomp_verify__h_nargs=0
_shtab_ucomp_verify___help_nargs=0
_shtab_ucomp_verify___verbose_nargs=0
_shtab_ucomp_simulate_pos_0_nargs=1
_shtab_ucomp_simulate__h_nargs=0
_shtab_ucomp_simulate___help_nargs=0
_shtab_ucomp_simulate___no_eod_nargs=0
_shtab_ucomp_script_pos_0_nargs=*
_shtab_ucomp_script__h_nargs=0
_shtab_ucomp_script___help_nargs=0
_shtab_ucomp_script___no_wait_nargs=0
_shtab_ucomp_script___verbose_nargs=0


# $1=COMP_WORDS[1]
_shtab_compgen_files() {
  compgen -f -- $1  # files
}

# $1=COMP_WORDS[1]
_shtab_compgen_dirs() {
  compgen -d -- $1  # recurse into subdirs
}

# $1=COMP_WORDS[1]
_shtab_replace_nonword() {
  echo "${1//[^[:word:]]/_}"
}

# set default values (called for the initial parser & any subparsers)
_set_parser_defaults() {
  local subparsers_var="${prefix}_subparsers[@]"
  sub_parsers=${!subparsers_var}

  local current_option_strings_var="${prefix}_option_strings[@]"
  current_option_strings=${!current_option_strings_var}

  completed_positional_actions=0

  _set_new_action "pos_${completed_positional_actions}" true
}

# $1=action identifier
# $2=positional action (bool)
# set all identifiers for an action's parameters
_set_new_action() {
  current_action="${prefix}_$(_shtab_replace_nonword $1)"

  local current_action_compgen_var=${current_action}_COMPGEN
  current_action_compgen="${!current_action_compgen_var}"

  local current_action_choices_var="${current_action}_choices"
  current_action_choices="${!current_action_choices_var}"

  local current_action_nargs_var="${current_action}_nargs"
  if [ -n "${!current_action_nargs_var}" ]; then
    current_action_nargs="${!current_action_nargs_var}"
  else
    current_action_nargs=1
  fi

  current_action_args_start_index=$(( $word_index + 1 ))

  current_action_is_positional=$2
}

# Notes:
# `COMPREPLY`: what will be rendered after completion is triggered
# `completing_word`: currently typed word to generate completions for
# `${!var}`: evaluates the content of `var` and expand its content as a variable
#     hello="world"
#     x="hello"
#     ${!x} -> ${hello} -> "world"
_shtab_ucomp() {
  local completing_word="${COMP_WORDS[COMP_CWORD]}"
  COMPREPLY=()

  prefix=_shtab_ucomp
  word_index=0
  _set_parser_defaults
  word_index=1

  # determine what arguments are appropriate for the current state
  # of the arg parser
  while [ $word_index -ne $COMP_CWORD ]; do
    local this_word="${COMP_WORDS[$word_index]}"

    if [[ -n $sub_parsers && " ${sub_parsers[@]} " =~ " ${this_word} " ]]; then
      # valid subcommand: add it to the prefix & reset the current action
      prefix="${prefix}_$(_shtab_replace_nonword $this_word)"
      _set_parser_defaults
    fi

    if [[ " ${current_option_strings[@]} " =~ " ${this_word} " ]]; then
      # a new action should be acquired (due to recognised option string or
      # no more input expected from current action);
      # the next positional action can fill in here
      _set_new_action $this_word false
    fi

    if [[ "$current_action_nargs" != "*" ]] && \
       [[ "$current_action_nargs" != "+" ]] && \
       [[ "$current_action_nargs" != *"..." ]] && \
       (( $word_index + 1 - $current_action_args_start_index >= \
          $current_action_nargs )); then
      $current_action_is_positional && let "completed_positional_actions += 1"
      _set_new_action "pos_${completed_positional_actions}" true
    fi

    let "word_index+=1"
  done

  # Generate the completions

  if [[ "${completing_word}" == -* ]]; then
    # optional argument started: use option strings
    COMPREPLY=( $(compgen -W "${current_option_strings[*]}" -- "${completing_word}") )
  else
    # use choices & compgen
    COMPREPLY=( $(compgen -W "${current_action_choices}" -- "${completing_word}"; \
                  [ -n "${current_action_compgen}" ] \
                  && "${current_action_compgen}" "${completing_word}") )
  fi

  return 0
}

complete -o filenames -F _shtab_ucomp ucomp
